plugins {
    id 'multiloader-loader'
    id 'net.neoforged.moddev'
    id 'io.github.goooler.shadow'
    id 'se.bjurr.gitchangelog.git-changelog-gradle-plugin'
}

archivesBaseName = "${mod_id}"
version = neoforge_mod_version

neoForge {
    version = neoforge_version
    parchment {
        minecraftVersion = parchment_mc_version
        mappingsVersion = parchment_version
    }
    runs {
        configureEach {
            systemProperty('neoforge.enabledGameTestNamespaces', mod_id)
            ideName = "NeoForge ${it.name.capitalize()} (${project.path})" // Unify the run config names with fabric
        }
        client {
            client()
        }
        server {
            server()
        }
        data {
            programArguments.addAll '--mod', project.mod_id, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
            data()
        }
    }
    mods {
        "${mod_id}" {
            sourceSet sourceSets.main
        }
    }
}

dependencies {
    implementation group: 'com.illusivesoulworks.spectrelib', name: 'spectrelib-neoforge', version: "${spectrelib_version}"
    jarJar group: 'com.illusivesoulworks.spectrelib', name: 'spectrelib-neoforge', version: "${spectrelib_version}"

    compileOnly "mezz.jei:jei-1.21-common-api:${jei_version}"
    implementation "mezz.jei:jei-1.21-neoforge:${jei_version}"

    compileOnly "me.shedaniel:RoughlyEnoughItems-neoforge:${rei_version}"
    implementation "curse.maven:sereneseasons-291874:${serene_seasons_neoforge_version}"
    implementation "curse.maven:glitchcore-955399:${glitch_core_neoforge_version}"
    //compileOnly "curse.maven:create-328085:${create_forge_version}"
    implementation "vazkii.patchouli:Patchouli:${patchouli_version}-NEOFORGE-SNAPSHOT"
    implementation "xyz.brassgoggledcoders:PatchouliProvider:${patchouli_provider_version}"
    compileOnly "dev.gigaherz.sewingkit:SewingKit-1.21:${sewingkit_version}"
    compileOnly "curse.maven:vampirism-233029:${vampirism_neoforge_version}"

    if (System.getenv('DATA_GEN') != null) {
        //runtimeOnly "curse.maven:create-328085:${create_neoforge_version}"
        runtimeOnly "dev.gigaherz.sewingkit:SewingKit-1.21:${sewingkit_version}"
    }
    else {
        //runtimeOnly "me.shedaniel:RoughlyEnoughItems-neoforge:${rei_version}"
        //runtimeOnly "dev.architectury:architectury-neoforge:${architectury_version}"
        //runtimeOnly "me.shedaniel.cloth:cloth-config-neoforge:${cloth_config_version}"
        runtimeOnly "curse.maven:simpletextoverlay-321283:${simpletextoverlay_neoforge_version}"
        //runtimeOnly "dev.gigaherz.sewingkit:SewingKit-${minecraft_version}:${sewingkit_version}"
        //runtimeOnly "curse.maven:configured-457570:4462839"
        //runtimeOnly "curse.maven:biomesoplenty-220318:${bop_neoforge_version}"
        //runtimeOnly "curse.maven:terrablender-940057:${terrablender_neoforge_version}"
        //runtimeOnly "curse.maven:terralith-513688:5512077"
        //runtimeOnly "curse.maven:primalwinter-393321:4575861"
        //runtimeOnly "curse.maven:byg-247560:${byg_neoforge_version}"
        //runtimeOnly "curse.maven:corgilib-693313:${corgilib_neoforge_version}"
        //runtimeOnly "software.bernie.geckolib:geckolib-neoforge-${minecraft_version}:${geckolib_neoforge_version}"
        //runtimeOnly "curse.maven:twilightforest-227639:${twilight_forest_neoforge_version}"
        //runtimeOnly "curse.maven:botania-225643:???"
        //runtimeOnly "curse.maven:curios-1037991:5657610"
        //runtimeOnly "curse.maven:croptopia-415438:4512807"
        //runtimeOnly "curse.maven:farmers_delight-398521:???"
        //runtimeOnly "curse.maven:xerca-341575:???"
        //runtimeOnly "curse.maven:morecraft-59648:???"
        //runtimeOnly "curse.maven:sophisticated_core-618298:???"
        //runtimeOnly "curse.maven:sophisticated_backpacks-422301:???"
        //runtimeOnly "curse.maven:ecologics-570463:???"
        //runtimeOnly "curse.maven:sprout-565856:???"
        //runtimeOnly "curse.maven:arsnouveau-401955:${ars_neoforge_version}"
        //runtimeOnly "curse.maven:ars_elemental-561470:5652442"
        //runtimeOnly "curse.maven:create-328085:${create_neoforge_version}"
        //runtimeOnly "curse.maven:create_cafe-542235:???"
        //runtimeOnly "curse.maven:kiwi-303657:???"
        //runtimeOnly "curse.maven:fruittrees-355467:???"
        //runtimeOnly "curse.maven:appleskin-248787:4605078"
        //runtimeOnly "curse.maven:puzzleslib-495476:4660882"
        //runtimeOnly "curse.maven:leavemybarsalone-281715:4613509"
        //runtimeOnly "curse.maven:scuba_gear-399090:4593711"
        //runtimeOnly "curse.maven:kobolds-484967:4632499"
        //runtimeOnly "curse.maven:more_food-874343:${more_food_neoforge_version}"
        //runtimeOnly "curse.maven:kubejs-238086:${kubejs_neoforge_version}"
        //runtimeOnly "curse.maven:rhino-416294:${rhino_neoforge_version}"
        //runtimeOnly "curse.maven:crafttweaker-239197:${crafttweaker_neoforge_version}"
        //runtimeOnly "curse.maven:phc_food_core-372534:${phc_food_core_neoforge_version}"
        //runtimeOnly "curse.maven:phc_crops-361385:${phc_crops_neoforge_version}"
        //runtimeOnly "curse.maven:phc_trees-365460:${phc_trees_neoforge_version}"
        //runtimeOnly "curse.maven:phc_food_extended-402231:${phc_food_extended_neoforge_version}"
        //runtimeOnly "curse.maven:the_veggie_way-270684:${the_veggie_way_neoforge_version}"
        //runtimeOnly "curse.maven:eternal_starlight-1080592:5673629"
        //runtimeOnly "curse.maven:undergarden-379849:5651032"
        //runtimeOnly "curse.maven:colorful_hearts-854213:${colorful_hearts_neoforge_version}"
        //runtimeOnly "curse.maven:puzzles_lib-495476:${puzzles_lib_neoforge_version}"
        //runtimeOnly "curse.maven:lmba-281715:${lmba_neoforge_version}"
        //runtimeOnly "curse.maven:vampirism-233029:${vampirism_neoforge_version}"
    }
}

sourceSets.main.resources {
    srcDir 'src/generated/resources'
}

shadowJar {
    archiveClassifier = ''
}

task changelog(type: se.bjurr.gitchangelog.plugin.gradle.GitChangelogTask) {
    file = new File(project(":").projectDir.toString() + '/build/libs/changelog.txt');
    templateContent = file(project(":").projectDir.toString() + '/files/templates/changelog.mustache').getText('UTF-8');
    fromRepo = file("$projectDir");
    toRef = "HEAD";
    fromRef = "${minecraft_version}-${last_mod_version}";
}

def updates = tasks.register("generateUpdates", Copy) {
    it.outputs.upToDateWhen {
        false
    }

    it.from("../files/templates/") {
        include 'updates.json'
        expand 'version': version, 'minecraft_version': minecraft_version
    }

    it.into '../files/'
}

tasks.generateUpdates.mustRunAfter('jar', 'sourcesJar')

tasks.build.dependsOn('changelog', 'generateUpdates')

def changelogFile = project(":").projectDir.toString() + '/build/libs/changelog.txt'
def publishFile = project(":").projectDir.toString() + "/NeoForge/build/libs/${archivesBaseName}-${version}.jar"

publishMods {
    file = file(publishFile)
    changelog = file(changelogFile).text
    type = "${release_type}".startsWith("release") ? STABLE : ("${release_type}".startsWith("beta") ? BETA : ALPHA)
    modLoaders.add('neoforge')

    if (project.hasProperty('hscurseApiKey')) {
        curseforge {
            accessToken = project.hscurseApiKey
            projectId = project.hscurseId
            javaVersions.add(JavaVersion.toVersion("${java_version}"))
            clientRequired = true
            serverRequired = true
            minecraftVersions.addAll("${release_versions}".split(','))
            embeds('spectrelib')
            optional('configured')
            optional('catalogue')
            optional('jei')
            optional('simpletextoverlay')
            optional('serene-seasons')
            optional('biomes-o-plenty')
            optional('oh-the-biomes-youll-go')
            optional('croptopia')
            optional('farmers-delight')
            optional('xercamod')
            optional('kitteh6660s-morecraft')
            optional('sophisticated-backpacks')
            optional('ecologics')
            optional('ars-nouveau')
            optional('ars-elemental')
            optional('sprout')
            optional('create-cafe')
            optional('fruit-trees')
            optional('leave-my-bars-alone')
            optional('create')
            optional('patchouli')
            optional('scuba-gear')
            optional('kobolds')
            optional('primal-winter')
            optional('tinkers-construct')
            optional('sewing-kit')
            optional('more-food-xd')
            optional('pams-harvestcraft-2-food-core')
            optional('pams-harvestcraft-2-crops')
            optional('pams-harvestcraft-2-trees')
            optional('pams-harvestcraft-2-food-extended')
            optional('eternal-starlight')
            optional('the-undergarden')
            optional('terralith')
        }
    }
    if (project.hasProperty('hsModrinthId')) {
        modrinth {
            accessToken = project.modrinthKey
            projectId = project.hsModrinthId
            minecraftVersions.addAll("${release_versions}".split(','))
            optional('create')
            optional('ecologics')
            optional('create-cafe')
            optional('scuba-gear')
            optional('farmers-delight')
            optional('xercamod')
            optional('leave-my-bars-alone')
            optional('sprout')
            optional('patchouli')
            optional('jei')
            optional('biomesyougo')
            optional('kobolds')
            optional('primal-winter')
            optional('tinkers-construct')
            optional('fruitful-fun')
            optional('more-food-xd')
            optional('eternal-starlight')
            optional('the-undergarden')
            optional('terralith')
        }
    }
    if (project.hasProperty('hsGithubToken')) {
    }
}
